plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "org.sonarqube" version "4.0.0.2929"
}

apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'

group = 'com'
version = '0.0.1'
sourceCompatibility = '11'

// SonarQube 플러그인 설정
// 토큰 sqp_1b86578e941c263850c0c828a9cb5037f38a08b4
sonarqube {
    properties {
        property 'sonar.projectName', 'question'
        property 'sonar.projectKey', 'question'
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.token', 'sqp_2e6d9746a2ce469e91cdb87f0043e03964ee01a1'
        property "sonar.language", "java"
        property "sonar.sourceEncoding", "UTF-8"
        property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled false
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'com.google.guava:guava:31.1-jre'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.junit.platform:junit-platform-commons:1.8.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}